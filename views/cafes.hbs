<div class="page">
    <div class="header-container">
        <div class="header">
            <h3>Hi {{user.username}} !</h3>
            <a class="logout" href="/auth/logout">Logout</a>
        </div>

        <div class="header-map-container">
            <div class="desc">
                Search for a working cafe near you or pin the working cafes you know to help others!
            </div>
            <form onsubmit="axiosPost()">
                <input class="add-cafe-description" type="text"
                    placeholder="Add comment or description and press 'Enter'">
            </form>
            <div>
                <div id='map'>
                    <div id="info"></div>
                </div>
            </div>
        </div>
    </div>
    <script>

        let cafeName;
        let cafeAddress;
        let cafePostcode;
        let city;
        let country;
        let cafeLng;
        let cafeLt;
        let cafeCoordinates;

        mapboxgl.accessToken = 'pk.eyJ1IjoicGF2aXoiLCJhIjoiY2syenk4cThtMDJmZzNucmN0cXM2OXVqZCJ9.kWENQ9HBsyj_LbjsAZqB4Q';
        var coordinates = document.getElementById('coordinates');
        var map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/streets-v11',
            center: [13.40, 52.52],
            zoom: 10
        });


        var geocoder = new MapboxGeocoder({ // Initialize the geocoder
            accessToken: mapboxgl.accessToken, // Set the access token
            mapboxgl: mapboxgl, // Set the mapbox-gl instance
            placeholder: 'Search for working cafes in Berlin', // Placeholder text for the search bar
            bbox: [13.249066317660635, 52.41424490784732, 13.540030204072025, 52.5949388733805], // Boundary for Berlin
            proximity: {
                longitude: 13.40,
                latitude: 52.52
            } // Coordinates of Berlin
        });

        map.addControl(geocoder);

        // After the map style has loaded on the page,
        // add a source layer and default styling for a single point
        map.on('load', function () {
            map.addSource('single-point', {
                type: 'geojson',
                data: {
                    type: 'FeatureCollection',
                    features: []
                }
            });

            // Listen for the `result` event from the Geocoder
            // `result` event is triggered when a user makes a selection
            // Add a marker at the result's coordinates
            geocoder.on('result', function (ev) {
                const resultGeocoder = map.getSource('single-point').setData(ev.result);
                // access the data from the json file
                //console.log('geoCoder result', resultGeocoder)
                cafeName = resultGeocoder._data.text;
                cafeAddress = resultGeocoder._data.properties.address;
                cafePostcode = resultGeocoder._data.context[1].text;
                city = resultGeocoder._data.context[2].text;
                country = resultGeocoder._data.context[3].text;
                cafeLng = resultGeocoder._data.center[0];
                cafeLt = resultGeocoder._data.center[1];
                cafeCoordinates = [cafeLng, cafeLt];
                document.querySelector(".add-cafe-description").style.display = "block"
                document.querySelector("#info").style.display = "block"
                document.querySelector('#info').innerHTML = `
                <div>
                <li>${cafeName}</li>
                <li>${cafeAddress}</li>
                <li>${cafePostcode}, ${city}</li>
                <li>${country}</li>
                </div>`

            });
        });


        const axiosPost = () => {
            axios.post("/cafes", {
                // added new variables as values inside model keys
                name: cafeName,
                address: `${cafeAddress}, ${cafePostcode}, ${city}, ${country}`, //backticks
                coordinates: cafeCoordinates,
                description: document.querySelector('.add-cafe-description').value
            }).then(response => {
                console.log(response.data)
                getMarkers();
            }).catch(err => {
                console.log(err);
            })
        }

        const getMarkers = () => {

            axios.get('api/cafes').then(response => {
                response.data.forEach(cafe => {
                    console.log('getMarkers', cafe);
                    var popup = new mapboxgl.Popup({ offset: 25 })
                        .setText(`${cafe.name}, ${cafe.address}`);
                    new mapboxgl.Marker().setLngLat(cafe.coordinates).setPopup(popup).addTo(map);
                    // create the popup

                })
            }).catch(err => {
                console.log(err);
            })
        }

        getMarkers();
    </script>
    <div class="list">
        <h1>List of Pinned Cafes</h1>

        {{#each cafe}}

        <div>
            <ul class="list-item">
                <div>
                    <li class="cafe-name">{{name}}</li>
                    <li>{{address}}</li>
                    <li> <strong>Description: </strong>{{description}}</li>
                </div>
                <div>
                    <li> <strong>Posted by: </strong> {{postedBy.username}}</li>
                </div>

            </ul>
        </div>

        {{/each}}
    </div>

</div>